apiVersion: apps/v1
kind: Deployment
metadata:
  name: ds-pipeline-ui-{{.Name}}
  namespace: {{.Namespace}}
  labels:
    app: ds-pipeline-ui-{{.Name}}
    component: data-science-pipelines
    dspa: {{.Name}}
spec:
  selector:
    matchLabels:
      app: ds-pipeline-ui-{{.Name}}
      component: data-science-pipelines
      dspa: {{.Name}}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: ds-pipeline-ui-{{.Name}}
        component: data-science-pipelines
        dspa: {{.Name}}
    spec:
      containers:
        - env:
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-pod-template.json
            - name: MINIO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: "{{.ObjectStorageConnection.CredentialsSecret.AccessKey}}"
                  name: "{{.ObjectStorageConnection.CredentialsSecret.SecretName}}"
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: "{{.ObjectStorageConnection.CredentialsSecret.SecretKey}}"
                  name: "{{.ObjectStorageConnection.CredentialsSecret.SecretName}}"
            - name: ALLOW_CUSTOM_VISUALIZATIONS
              value: "true"
            - name: ARGO_ARCHIVE_LOGS
              value: "true"
            - name: ML_PIPELINE_SERVICE_HOST
              value: ds-pipeline-{{.Name}}
            - name: ML_PIPELINE_SERVICE_PORT
              value: '8888'
            - name: METADATA_ENVOY_SERVICE_SERVICE_HOST
              value: ds-pipeline-metadata-envoy-{{.Name}}
            - name: METADATA_ENVOY_SERVICE_SERVICE_PORT
              value: "9090"
          image: {{.MlPipelineUI.Image}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          name: ds-pipeline-ui
          ports:
            - containerPort: 3000
          readinessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            {{ if .MlPipelineUI.Resources.Requests }}
            requests:
              {{ if .MlPipelineUI.Resources.Requests.CPU }}
              cpu: {{.MlPipelineUI.Resources.Requests.CPU}}
              {{ end }}
              {{ if .MlPipelineUI.Resources.Requests.Memory }}
              memory: {{.MlPipelineUI.Resources.Requests.Memory}}
              {{ end }}
            {{ end }}
            {{ if .MlPipelineUI.Resources.Limits }}
            limits:
              {{ if .MlPipelineUI.Resources.Limits.CPU }}
              cpu: {{.MlPipelineUI.Resources.Limits.CPU}}
              {{ end }}
              {{ if .MlPipelineUI.Resources.Limits.Memory }}
              memory: {{.MlPipelineUI.Resources.Limits.Memory}}
              {{ end }}
            {{ end }}
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
              readOnly: true
      serviceAccountName: ds-pipeline-ui-{{.Name}}
      volumes:
        - configMap:
            name: {{.MlPipelineUI.ConfigMapName}}
          name: config-volume
